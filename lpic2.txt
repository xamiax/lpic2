--- 200.1 ---
sar und iostat (in sysstat enthalten)
  lesen /proc aus ohne schreibzugriff, daher keine rootrechte notwendig
  sar/iostat $zeitabstand $anzahlMessungen
    -b   I/O-Transferraten
  /etc/init.s/sysstat -> ENABLED="true"
  /etc/init.d/sysstat start
  sysstat -A
  iostat
    -c   cpulast
    -d   verwendung von datenträgern
    -h   human read
    -x   extended stats

vmstat
  prozesse, speicher, I/O, cpu, system(interrupts/sec)
  -a   all (aktive und inaktive speicher)
  -d   disk (stats zu festplattenzugriffen)
  -D   zusammenfassung von festplattenstats
  -s   tabelle
  -f   anzahl der Forks

netstat
  für netzwerkverbindungen und routing-tabellen
  
ps
  -a   alle benutzer
  -u   +startzeit, pfad, benutzer
  -x   terminal unabhängige
  -C PROZESS   zeigt alle instanzen
  -U BENUTZER   eine bestimmten benutzers

pstree
  -a   argumente bei aufruf
  -G   bessere grafische ausgabe
  -p   pid
  -n   sortierung nach pid

uptime
  time, uptime, # active users, avg. systemlast (1,5,15 min)

w
  uptime
  table of logged in users

lsof
  list open files


--- 200.2 ---
collectd
  auswertung mit rrdtool
  grafische oberflächen
    cacti (php5 + mysql)
    mrtg (php5 + mysql + snmpd)
  nagios


--- 201.1 ---


--- 201.2 ---
/usr/src/<kernel version>

.config file -> alle informationen zur kompilierung des kernels
  make config
  make menuconfig
  make xconfig
  make gconfig
  make oldconfig
  make cloneconfig

  make dep		checks dependencies and creates .depend-files
  make clean		deletes old compiles and .depend-files		
  make [b]zImage	creates static part of kernel
  make modules		compiles modules
  make modules_install	installs modules (in /lib/modules/<kernel version>

  make dep clean bzImage modules modules_install 

ab kernel 2.6
  make modules
  make modules_install


cp /usr/src/linux/arch/i386/boot/bzImage /boot/vmlinuz-<kernel version>


--- 201.3 ---
monolithisch -> keine module nachladbar
modular aufgebaut -> module beliebig nachladbar und entladbar

/usr/src/linux-2.6.38.4-21.9
/usr/src/linux -> softlink
/boot/vmlinuz-2.6.38.4-21.9 -> softlink

Module in /lib/modules/2.6.38.4/kernel/
Abhängigkeiten in Datei /lib/modules/2.6.38.4/kernel/modules.dep
Module waren .o-Dateien vor 2.6 und sind nun .ko-Dateien (KernelObjekt)

uname gibt Kernelversion
  -r   nur Kernelversion
  -a   alle Infos

lsmod
  Status des laufenden Kernels, geladene Module
  Greift auf /proc/modules/ zu

modinfo
  Gibt Infos zu einem bestimmten Modul aus
  -a   zeigt nur Autor
  -d   zeigt nur Beschreibung
  -l   zeigt nur Lizenz
  -p   zeigt nur zu übergebende Parameter
  -n   zeigt nur den Dateinamen des Moduls

insmod
  lädt Module im laufenden Betrieb nach
  als parameter vollständiger pfad nötig

rmmod
  entlädt Module im laufenden Betrieb
  modulname reicht aus
  noch verwendete module werden nicht entladen
  -v   verbose
  -f   force, wenn modul noch in verwendung

modprobe
  vereint insmod und rmmod
  modulname reicht aus
  -r   entlädt module
  -f   force

depmod
  abhängigkeiten in /lib/modules/VERSION/kernel/modules.dep
  depmod aktualisiert die datei
  -n   trockenlauf mit ausgabe auf stdout
  -A   prüft vorher, ob neue module hinzugekommen sind

modules.dep
  modul0: modul1 modul2 modul3
  modul0 hängt von den modulen hinter ':' ab

modules.conf modprobe.conf modprobe.conf.local
  steuern das verhalten von modprobe
  in /etc/
  modules.conf bei neueren versionen nicht mehr benutzt
  modprobe.conf.local wird von konfigurationsfrontends nicht verändert, daher gut für manuelle konfiguration

/proc/sys/kernel/
  kernel legt hier konfigurationsinformationen in dateien an
  bspl: osrelease ostype hostname modprobe

dmesg
  kernel ring buffer auslesen udn steuern
  buffer befindet sich in /proc/kmsg/
  meldungen wie in /var/log/messages bzw /var/log/syslog
  dmesg | tail
  -c   (clear) löscht buffer inhalt nach ausgabe
  -r   (raw) rohausgabe mit loglevel-präfixen
  -s BUFFERSIZE 
  -n LOGLVL   legt fest, welche loglevel angezeigt werden. 1-8. 1 panikmeldungen

/sbin/lspci
  greift auf /usr/share/misc/pci.ids zu
  zeigt über den pci-bus angeschlossene geräte an
  -v   verbose
  -vv   more verbose
  -vvv   most verbose
  -x   infos als hexdump
  -xxx
  -xxxx
  -k   zeigt zum gerät zugehörige kernel treiber und module
  -m   machine readable
  -mm

lsusb
  greift auf /var/lib/usbutils/usb.ids zu
  zeigt uber den usb-bus angeschlossene geräte an
  -v   verbose
  -d VENDORID:PRODUCTID

/usr/bin/lsdev
  greift auf /proc/interrupts /proc/ioports /proc/dma zu

strace
  zeigt alle systemaufrufe während der ausführung eines commands an
  strace COMMAND
  -c   counter
ltrace
  zeigt noch alle bibliotheken an, die benutzt werden

strings
  gibt druckbare zeichen einer datei aus

lsof
  zeigt dateien an, die in benutzung sind
  -t   gibt nur die id aus zb für kill
    kill -9 $(lsof -t /dev/sdb1)

  -i   iwas mit internet

udev
  löst devfs ab
  konfigdateien in /etc/udev/
  /etc/udev/udev.conf legt protokollierungsgrad fest
    udev_log="err"
    udev_root=/dev
    udev_rules=/etc/udev
  /etc/udev/rules.d
    werden alphanumerisch abgearbeitet
    nach regeländerungen daemon neustarten mit
      /etc/init.d/udev restart

udevmonitor
  heutzutage udevadm monitor
  
sysctl
  kernel paramter zur laufzeit ändern
  -w   (write) ändern einer einstellung
    sysctl -w kernel.domaine="beispiel.com"
  parameter gelten nur bis neustart
  dauerhafte änderungen in /etc/sysctl.conf
  oder .conf-datei in /etc/sysctl.d/

analyse von protokolldateien
  fast alle logs in /var/log
  /var/log/messages - in allen linux
  /var/log/syslog - nicht in allen
  grep kernel /var/log/messages
  /var/log/apache/access.log - apache webserver
  /var/log/squid/access.log - squid proxy
  /var/log/samba/* - samba server
  /var/log/auth.log - diverse authentifizierungsanbieter (pam)
  /var/log/mail.* - sämtlich mailserverdienste (smtp,imap,pop)

analyse vom /proc-dateisystem
  /proc liegt im ram
  schnittstelle zum kernel
  verzeichnisse für prozesse (name pid)
    cpuinfo     - infos über cpu
    dma         - verwendete dma-kanäle
    interrupts  - verwendete interrupts (irq)
    ioports     - aktuell registrierte input output ports
    meminfo     - detaillierte auskunft über speicherverwendung
    modules     - liste geladener kernel-module (lsmod holt hier infos)
  wichtige unterverzeichnisse
    /proc/sys/kernel/
    /proc/sys/net/
  änderungen in /proc/ nur bis neustart
  dauerhafte änderungen in /etc/sysctl.conf
  oder .conf-datei in /etc/sysctl.d/


--- 202.1 ---
runlevel
  0 - schaltet sich aus
  1 - (S) single user, kein netzwerk, keine grafik
  2 - keine grafik, multi user, vllt netzwerk
  3 - multi user, netzwerk, vllt grafik
  4 - 
  5 - multi user, netzwerk, grafik - falls vorhanden
  6 - reboot

konfigurationsdatei /etc/inittab
  programmdatei in /sbin/
  > # The default runlevel is defined here
  > id:3:initdefault:
    
  >1:2345:respawn:/sbin/mingetty tty1
    ID der konsole:verfügbare runlvl:neustart, wenn beendet:befehl name

  > # what to do when CTRL-ALT-DEL is pressed
  > ca::ctrlaltdel:/sbin/shutdow -r -t 4 now

basisverzeichnis für init skripte meist /etc/init.d/ /etc.rc.d/
init skripte kennen start stop
manche auch noch status reload
/etc/rc1.d/ /etc/rc2.d/ etc.
  je nach runlvl arbeitet init die skripte des verzeichnisses durch
  in den verzeichnissen sind nur softlinks
  [S|K][00-99][NAME] [start/kill][reihenfolge][name]
tools für die softlinks und abhängigkeiten
  redhat -> chkconfig
  debian -> update-rc.d

chkconfig
  --add   neuen service hinzufügen
  --del   entfernt service
  --on   schalte service für bestimmten runlvl an
  --off   schalte service für bestimmten runlvl aus
  --list   zeige alle verwaltete service und runlvl an

update-rc.d ssh defaults
                disable
                enable
                remove (-f)

runlevel
  zeigt aktuellen runlevel an

init / telinit
  init 1 wechselt in single user
    init s oder init S gehen auch
  init 0 fährt herunter
  init 6 rebootet
  benutzer werden nicht gewarnt

methoden um rechner herunterzufahren
  shutdown
  poweroff 
  halt
  reboot
  init

shutdown für administratoren am besten
  benutzer werden gewarnt
  programme bekommen kill -15
  nach gewisser zeit kill -9
  -r   reboot
  -h   halt
  -t   time in sek
  -k   nur konsolenmeldung schicken, nicht herunterfahren
  -f   kein fsck, falls fällig bei neustart
  -F   fsck, bei neustart


--- 202.2 ---
mbr backup
  dd if=/dev/sd* of=mbr.backup ibs=512 count=1

GRUB
  grub legace
    /boot/grub/stage1
    /boot/grub/stage2 (eigentlich 3)

  grub manuell starten mittels prompt
    grub> root (hd0,0)
    grub> kernel /boot/vmlinuz-2.6.23.1-10.fc7 root=/dev/sda2
    grub> initrd /boot/initrd-2.6.23.1-10.fc7.img
    grub> boot

  /boot/grub/device.map
    > (hd0)    /dev/sda

  /boot/grub/menu.lst -> /boot/grub/grub.conf
    > #boot=/dev/sda
    > default=0
    > timeout=5
    > splashimage=(hd0,0)/grub/splash.xpm.gz
    > hiddenmenu
    > title Fedora (2.6.23.1-10.fc7)
    >     root (hd0,0)
    >     kernel /vmlinuz-2.6.23.1-10.fc7 ro
    >     root=/dev/VolGroup00/LogVol00 rhgb quiet
    >     initrd /initrd-2.6.23.1-10.fc7.img

GRUB2

dateisystem prüfen und reparieren
  $ mount | grep sdb
  $ umount /dev/sdb1
  $ lsof /dev/sdb1
  $ umount /dev/sdb1
  $ dmesg | tail -n 20
  $ umount /dev/sdb1
  $ fsck -t ext4 -V /dev/sdb1
  $ mount /dev/sdb1 && dmesg | tail

fsck
  filesystemcheck
  -t FSTYPE
  -a   repariere alle fehler ohne zu fragen
  -y   beantworte alle fragen mit yes
  -A   überprüfe alles fs in /etc/fstab
  -V   verbose

/etc/fstab
  > errors=remount-ro
    bei zugriffsstörung wird fs nur read only gemounted

  $ mount /dev/sdb1 -o remount,rw
  $ mount /dev/sdb1 -o remount,ro

init ram disk erzeugen
  redhat -> mkinitrd
  debian -> mkinitramfs


--- 202.3 ---
lilo
  ide=nodma
  apm=off
  acpi=off

  init=/sbin/init 2

  beim start von lilo wird 'lilo' ausgegeben
  je stufe ein buchstabe
  je früher ein fehler auftritt, desto weniger buchstaben
  > ''     -> 1. stufe wurde nicht ausgeführt
  > 'l'    -> /boot/boot.b konnte nicht geladen werden (festplattenfehler?)
  > 'li'   -> /boot/boot.b wurde gelesen, aber nicht ausgeführt (datei beschädigt?)
  > 'lil'  -> 2. stufe wurde gestartet, map-datei wurde nicht gelesen (fehl. bootlaufwerk?)
  > 'lil?' -> 2. stufe wurde in falschem speicherbereich geladen
  > 'lil-' -> map-datei ist ungültig (lilo-map-installer nach bootkonf-änderung nicht durchgeführt?)
  > 'lilo' -> 2. stufe wurde geladen

/etc/lilo.conf
  > message = /boot/message
  > timeout = 20
  > prompt
  > default = 2.6.11-custom
  > boot = /dev/hda2

  > image = /boot/vmlinuz-2.6.11-custom
  >   label = 2.6.11-custom
  >   map = /boot/initrd
  >   initrd = /dev/initrd
  >   root = /dev/hda2

nach änderungen der konfiguration muss der map-installer durchgeführt werden
  $ /boot lilo
    -C   alternative conf-datei
    -R   stellt die kommandozeile für den nöchsten systemstart ein
    -M   schreibt einen MBR auf eine festplatte
    -q   zeigt aktuelle bootkonfiguration an
    -v   verbose

syslinux
  bootloader ausschließlich für fat-partitionen

isolinux

extlinus

pxelinux


--- 203.1 ---
mount
  -a   hängt alle dateisysteme ein, die inf /etc/fstab gelistet sind
  -r   read only
  -w   writeable
  -t TYPE 
  -v   verbose
  -o OPTIONS   (koma seperated list)
    auto   ermöglicht automatische $ mount -a
    noauto   verhinder automatisches $ mount -a
    usrquota   ermöglicht quota auf benutzerebene
    grquota   ermöglicht quota auf gruppenebene
    suid   ermöglicht suid-bit
    nosuid   verhindert suid-bit
    exec   ermöglicht ausführen von dateien auf dem fs
    noexec   verhindert ausführen
    ro   read only
    rw   read write
    user   erlaubt normalem bentuzer mounten -> umount nur dieser user/root
    nouser   verhindert 
    users   erlaubt normalem benutzer mounten -> jeder kann umount
    defaults   setzt standard
      default defaults: rw,suid,dev,exec,auto,nouser,async

  $ mount -t nfs archangel:/storage /daten
    hostname:/verzeichnis

  $ mount -t smbfs [-o user=michael,password=geheim] //connor/storage /daten

/etc/fstab
  > /dev/sda1   /      ext3     acl,user_xattr   1 1
    |           |      |        |                | |
    einzuhängendes gerät        |                | |
                mountpoint      |                | |
                       fstype   |                | |
                                mount options    | |
                                                 dump info (0 -> dont save)
                                                   fsck info (0 -> dont ck)
                                                             (1 -> first ck)
                                                             (2 -> second ck)

/etc/mtab
  aufbau wie /etc/fstab
  mount -> eintrag in mtab (außer mount -n)
  /proc/mounts wird immer eingetragen (auch mount -n)

sync
  schreibt veränderte blöcke auf dateisysteme
  leer den dateisystembuffer

swapoff
  swap für datei/partition ausschalten
  keine ausgabe, daher -v benutzen

swapon
  -a   aktiviert alle in /etc/fstab gelisteten swaps
  -L LABEL   über label ansprechen (/proc/partitions notwendig)
  -U UUID   über uuid ansprechen
  -s   zeigt verwendung der swaps an

blkid
  gibt die uuid aus

/dev/disk/by-uuid/
  zuordnung der uuid zu den geräten mittels softlinks


--- 203.2 ---
fsck
  frontend zur überprüfung von dateisystemen
  e2fsck -> fsck.ext2 fsck.ext3 fsck.ext4
  fsck.minix
  fsck.cramfs
  fsck.xfs
  fsck.jfs
  fsck.msdos fsck.vfat -> dosfsck
  -f   (force) auch wenn dateisystem sauber erscheint
  -A   (all) testet alle in /etc/fstab gelistete
  -t TYPE
  -c   (check) sucht nach defekten blöcken
  -b BLOCKNUMMER   gibt alternativen superblock an
  -y   (yes)

tune2fs
  -c #   maximale mounts zwischen fsck
  -C #   dateisystem wurde # mal gemountet nach letztem fsck
  -i #[d|m|w]   maximale zeit zwischen fsck
  -T YYYYMMDD[[HHMM]SS]   letzter fsck des dateisystems
  -U UUID   setze uuid (clear, random, time)
  -j   ext2 -> ext3
  -l   infos zu superblocks

debugfs
  interaktives tool zum untersuchen und modifizieren von ext dateisystemen
  mit lsdel gelöschte dateien auf dem dateisystem anzeigen
  dump <INODE> /DEISRED/DIRECTORY/ zum wiederherstellen
  dateisystem darf dazu nicht gemeountet sein

dumpe2fs
  infos über ext dateisysteme

mke2fs
  -c   integrität eines dateisystems überprüfen

btrfs-tools
  btrfs neues dateisystem möglicherweise ext ersatz
  fsck.btrfs eigenese programm (kein link auf fsck)

fdisk
  -l   partitionstabelle anzeigen

  n   neue partition
  -> p/e   primär oder erweiter
  -> 1-4   nummer der partition
  -> 1-x   erster zylinder
  p   partitionstabelle anzeigen
  w   partitionen schreiben

mkfs
  -t TYPE   (type) den dateisystemtyp festlegen
  -c   (check) dateisystem auf fehlerhafte sektoren prüfen
  -v   (verbose)
  -j   (journal) erstellt journal für ext3
  -L LABEL   (label) Bezeichnung für dateisystem angeben
  mkfs.ext2
    -j   ext3
  mkfs.ext3 -> hardlink auf mkfs.ext2
  mkfs.ext4 -> hardlink auf mkfs.ext2
  mkfs.msdos -> softlink mkdosfs
  mkfs.vfat -> softlink mkdosfs
  mkfs.ntfs
  mkfs.xfs -> recht große datenmengen im cache um fragmentierung zu
    minimieren. dadurch datenverlust gefahr bei stromausfall.
  mkfs.cramfs -> read only fs für embedded systems
  mkfs.jfs 
  mkfs.btrfs -> eigenständiges programm pkg: btrfs-tools

mke2fs
  hardlink mit mkfs.ext2 mkfs.ext3 mkfs.ext4

xfs
  linux partitionstyp (83)
  ermöglicht journal auf anderem dateisystem (muss eingehängt sein)
  pkg xfsprogs
  pkg xfsdump
  
mkswap
  swap partitionstyp (82)
  $ mkswap /dev/sda4
  $ swapon -v /dev/sda4   -> ohne -v keine ausgabe
  $ swapoff -v /dev/sda4
  /etc/fstab
    > /dev/sda4     swap    swap   pri=42    0 0
  swapfile
    $ dd if=/dev/zero of=/swapfile bs=1024 count=524288
    $ mkswap /swapfile
    $ swapon /swapfile
    /etc/fstab
      > /swapfile    swap    swap    defaults    0 0
  $ cat /proc/swaps ->   zum sichergehen dass swap aktiviert wurde

xfs_info xfs_check xfs_repair xfs_fsr
  sehr robustes dateisystem
  $ xfs_fsr   -> dateisystem reorganisieren
  $ xfs_info /MOUNT/POINT   -> geometrie des dateisystems überprüfen (eingehängt)
  $ xfs_check /GERÄTE/DATEI [-l /JOURNAL/PARTITION]   -> fsck (ausgehängt)
  $ xfs_repair /GERÄTE/DATEI   -> reparieren

  $ xfsdump -v trace -f /media/backup/sicherung1 /xfsdisk
  $ xfsrestore -f /media/backup/sicherung1 /xfsdisk

smartd smartctl 
  technologie, die festplattenausfälle vorhersieht (~64%)
  pkg smartmontools
  $ smartctl   -> gefolgt von greätedatei des laufwerks
    -i   grundlegende informationen zu dateisystem
    -a   alle smart-parameter eines laufwerks ausgeben
    --scan   sucht nach laufwerken und gibt für jedes gerät, typ und protokoll aus
    -H   (health) gesundheitscheck des laufwerks
  $ smartd
    konfiguration notwendig
    /etc/default/smartmontools
    > enable_smart="/dev/sda"   -> welches laufwerk
    > start_smartd=yes   -> starte smartd bei systemstart
    > smartd_opts="--interval=3600"   -> überprüfung jede stunde
    /etc/smartd.conf
    $ /etc/init.d/smartmontools start
    $ grep smartd /var/log/syslog


--- 203.3 ---
automount
  pkg autofs
  hauptkonfigurationsdatei /etc/auto.master
  > /misc    /etc/auto.misc
  /etc/auto.misc
  > cd       -fstype=iso9660,ro,nosuid,nodev    :/dev/cdrom
  > floppy   -fstype=auto                       :/dev/fd0
    /misc/cd
    /misc/floppy
  nicht mehr gebräuchlich
  hald und dbus übernehmen heutzutage diese aufgabe

  nfs freigabe als automount einrichten
    $ mkdir /netz
    /etc/auto.master
    > /netz     /etc/auto.netz     --timeout=60
    /etc/auto.netz
    > storage     -fs=nfs,defaults      archangel:/storage
    $ ln -s /netz/storage /home/USER/Desktop/storage
  nur änderungen in /etc/auto.master benötigen restart
  $ /etc/init.d/autofs restart

mkisofs
  dateisystem erstellen für optische speicher
  iso9660 für cd
  udf für dvd
  $ mkisofs -r -J -l -ldots -o etc.iso /etc
  -r   (rock ridge) nutzerberechtigungen werden mitgespeichert
  -l   (long) lange dateinamen bis 31 zeichen
  -ldots   erlaubt . am anfang von dateinamen (.file -> _file)
  -o   outputfile
  -J   (joliet) für windows nutzung (dateinamen länge 64)
  -udf   udf dateisystem für dvd
    für gute portierung -r und -J benutzen

  iso einhängen
    $ mkdir /test
    $ mount -t iso9660 -o loop /home/USER/etc.iso /test

cdrecord
  teilweise auch als wodim bekannt
  wodim kann aber keine blu-ray oder double-layer-dvd
  $ cdrecord -scanbus   -> prüft ob pc ein unterstütztes laufwerk hat
    > 4,0,0    400) 'TSSTcorp' 'CDDVDW SH-S223B ' 'SB01' Removable CD-ROM
      4,0,0   -> ist die ID des laufwerks
  $ cdrecord --devices
    > wodim: Overview of accessible drives (1 found) :
    > -------------------------------------------------------------------------
    >  0  dev='/dev/sr0'	rwrw-- : 'Optiarc' 'DVD RW AD-7240S'
    > -------------------------------------------------------------------------
  $ cdrecord -v -dummy dev=/dev/sr0 /home/USER/etc.iso
    -dummy simuliert nur den schreibvorgang

cryptsetup
  $ modprobe dm_mod   -> lädt notwendiges modul für den device mapper
  $ cryptsetup luksFormat /dev/sdb1   -> verschlüsselt das angegeben dateisystem
  $ cryptsetup luksOpen /dev/sdb1 safe   -> erzeugt die gerätedatei /dev/mapper/safe
  $ mkfs.ext2 /dev/mapper/safe   -> erzeugt ext2 dateisystem auf gerät
  $ mkdir /safe   -> ordner als mountpoint erzeugen
  $ mount /dev/mapper/safe /safe   -> mounten
  alternativen
    DM-Crypt
    cryptloop
    loop-aes
    truecrypt


--- 204.1 ---
raid
  redundant array of inexpensive disks
  -> redundant array of independet disks
  software raid benötigt keinen controller -> billiger
  cpu muss sich um verwaltung der daten im raid kümmern -> langsamer
  software raid können festplatten verschieden groß sein
  hardware raid benutzt ganze laufwerke
  software raid benutzt nur partitionen

mdadm
  $ lsmod | grep md_mod   -> prüfe ob notwendiges kernel modul für multiple disks geladen ist
    ansonsten mit insmod bzw modprobe nachladen
  partitionen vom typ linux raid (fd) notwendig
  $ mdadm --create --verbose /dev/md0 --auto=yes --level=5 --raid-devices=4 /dev/sdb1 /dev/sdc1 /dev/sdd1 /dev/sde1
    --create   -> neues raid
    --verbose
    /dev/md0   -> gerätedatei für das raid array
    --auto=yes   -> automatische erstellung der gerätedatei, die nicht partitionierbar ist
    --level=5   -> 0,1,4,5,6,10
    --raid-devices=4   -> anzahl der zu verwendenden geräte
    /dev/sdb1 ...   -> auflistung der zu verwendenden geräte
  $ mkfs.ext4 /dev/md0   -> ext dateisystem erstellen
  $ mkdir /raid   -> ordner für einhänge punkt erstellen
  $ mount /dev/md0 /raid   -> raid einhängen
  /etc/fstab
    > /dev/md0   /raid   ext4   defaults   0 0
  $ mdadm --detail /dev/md0   -> zeigt infos zum raid an

  /etc/mdadm/mdadm.conf
    > MAILADDR raid-admin@domain.com   -> mailadresse für benachrichtigung bei fehlern
    > MAILFROM fileserver007@domain.com   -> damit man weiß welcher pc
  bei problemen und /etc/fstab wird ausgeschlossen, kann folgendes versucht werden:
    $ mdadm --detail --scan >> /etc/mdadm/mdadm.conf

  bestehendes raid erweitern
    $ sfdisk /dev/sdb -d | sfdisk /dev/sdf   -> partitionstabelle auf neues laufwerk schreiben
    $ mdadm --add /dev/md0 /dev/sdf1
    $ mdadm --detail /dev/md0   -> überprüfen ob alles geklappt hat
      /dev/sdf1 sollte als spare disk auftauchen
    $mdadm --grow --raid-devices=5 /dev/md0
      status kann mit $ cat /proc/mdstat   geprüft werden
    $ resize2fs /dev/md0   -> dateisystem vergrößern (umount nicht notwendig)


--- 204.2 ---
hdparm
  festplattenparamter auslesen und einstellen
  physikalische merkmale des laufwerks
  -a   read-ahead-konfiguration ablesen oder setzen
  -B#   einstellungen für apm ändern (#in[1,255])
  -g   festplattengeometrie anzeigen
  -i   identifikationsinformationen anzeigen (was dem kernel gesagt wurde)
  -I   identifikationsinformationen anzeigen (direkt von der festplatte)
  -r[0|1]   read-only-flag auslesen oder setzen
  -z   zwingt den kernel, partitionstabelle neu einzulesen
  -d   de- oder aktivieren des dma modus. dma entlastet cpu für mögl zusätzl performanz
  -X   ändert einstellung (MDMA/SDMA). meist in komb mit -d1
